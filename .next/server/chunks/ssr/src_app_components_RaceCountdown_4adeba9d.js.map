{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/diogo/Desktop/MeusProjetos/hackaton25/src/app/components/RaceCountdown.js"],"sourcesContent":["\"use client\";\nimport { useState, useEffect } from 'react';\n\nexport default function RaceCountdown() {\n  const [timeRemaining, setTimeRemaining] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  \n  // Example next race - in a real app this would come from an API or data source\n  const nextRace = {\n    name: \"Australian Grand Prix\",\n    circuit: \"Albert Park Circuit\",\n    location: \"Melbourne, Australia\",\n    date: \"March 30, 2025\",\n    time: \"06:00 GMT\",\n    // Setting this date to a future time for the countdown\n    dateTime: new Date('2025-03-30T06:00:00Z').getTime()\n  };\n  \n  useEffect(() => {\n    const updateCountdown = () => {\n      const now = new Date().getTime();\n      const distance = nextRace.dateTime - now;\n      \n      if (distance > 0) {\n        setTimeRemaining({\n          days: Math.floor(distance / (1000 * 60 * 60 * 24)),\n          hours: Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n          minutes: Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),\n          seconds: Math.floor((distance % (1000 * 60)) / 1000)\n        });\n      }\n    };\n    \n    // Update immediately\n    updateCountdown();\n    \n    // Then update every second\n    const interval = setInterval(updateCountdown, 1000);\n    return () => clearInterval(interval);\n  }, [nextRace.dateTime]);\n  \n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center mb-6\">\n        <div>\n          <h3 className=\"text-2xl font-bold\">{nextRace.name}</h3>\n          <p className=\"text-gray-600\">{nextRace.circuit}, {nextRace.location}</p>\n          <p className=\"text-gray-600\">{nextRace.date} at {nextRace.time}</p>\n        </div>\n        \n        <div className=\"mt-4 md:mt-0\">\n          <span className=\"bg-red-100 text-red-800 text-xs px-2 py-1 rounded\">\n            NEXT RACE\n          </span>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-4 gap-2\">\n        <div className=\"bg-gray-100 p-3 rounded-lg text-center\">\n          <div className=\"text-3xl font-bold text-red-600\">{timeRemaining.days}</div>\n          <div className=\"text-xs uppercase text-gray-600\">days</div>\n        </div>\n        <div className=\"bg-gray-100 p-3 rounded-lg text-center\">\n          <div className=\"text-3xl font-bold text-red-600\">{timeRemaining.hours}</div>\n          <div className=\"text-xs uppercase text-gray-600\">hours</div>\n        </div>\n        <div className=\"bg-gray-100 p-3 rounded-lg text-center\">\n          <div className=\"text-3xl font-bold text-red-600\">{timeRemaining.minutes}</div>\n          <div className=\"text-xs uppercase text-gray-600\">minutes</div>\n        </div>\n        <div className=\"bg-gray-100 p-3 rounded-lg text-center\">\n          <div className=\"text-3xl font-bold text-red-600\">{timeRemaining.seconds}</div>\n          <div className=\"text-xs uppercase text-gray-600\">seconds</div>\n        </div>\n      </div>\n      \n      {/* Progress bar representing time until the race */}\n      <div className=\"mt-6\">\n        <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n          <div \n            className=\"bg-red-600 h-2.5 rounded-full\" \n            style={{ width: `${Math.min(100, (30 - timeRemaining.days) / 30 * 100)}%` }}\n          ></div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACtB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACjD,MAAM;QACN,OAAO;QACP,SAAS;QACT,SAAS;IACX;IAEA,+EAA+E;IAC/E,MAAM,WAAW;QACf,MAAM;QACN,SAAS;QACT,UAAU;QACV,MAAM;QACN,MAAM;QACN,uDAAuD;QACvD,UAAU,IAAI,KAAK,wBAAwB,OAAO;IACpD;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,kBAAkB;YACtB,MAAM,MAAM,IAAI,OAAO,OAAO;YAC9B,MAAM,WAAW,SAAS,QAAQ,GAAG;YAErC,IAAI,WAAW,GAAG;gBAChB,iBAAiB;oBACf,MAAM,KAAK,KAAK,CAAC,WAAW,CAAC,OAAO,KAAK,KAAK,EAAE;oBAChD,OAAO,KAAK,KAAK,CAAC,AAAC,WAAW,CAAC,OAAO,KAAK,KAAK,EAAE,IAAK,CAAC,OAAO,KAAK,EAAE;oBACtE,SAAS,KAAK,KAAK,CAAC,AAAC,WAAW,CAAC,OAAO,KAAK,EAAE,IAAK,CAAC,OAAO,EAAE;oBAC9D,SAAS,KAAK,KAAK,CAAC,AAAC,WAAW,CAAC,OAAO,EAAE,IAAK;gBACjD;YACF;QACF;QAEA,qBAAqB;QACrB;QAEA,2BAA2B;QAC3B,MAAM,WAAW,YAAY,iBAAiB;QAC9C,OAAO,IAAM,cAAc;IAC7B,GAAG;QAAC,SAAS,QAAQ;KAAC;IAEtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAAsB,SAAS,IAAI;;;;;;0CACjD,8OAAC;gCAAE,WAAU;;oCAAiB,SAAS,OAAO;oCAAC;oCAAG,SAAS,QAAQ;;;;;;;0CACnE,8OAAC;gCAAE,WAAU;;oCAAiB,SAAS,IAAI;oCAAC;oCAAK,SAAS,IAAI;;;;;;;;;;;;;kCAGhE,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAK,WAAU;sCAAoD;;;;;;;;;;;;;;;;;0BAMxE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CAAmC,cAAc,IAAI;;;;;;0CACpE,8OAAC;gCAAI,WAAU;0CAAkC;;;;;;;;;;;;kCAEnD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CAAmC,cAAc,KAAK;;;;;;0CACrE,8OAAC;gCAAI,WAAU;0CAAkC;;;;;;;;;;;;kCAEnD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CAAmC,cAAc,OAAO;;;;;;0CACvE,8OAAC;gCAAI,WAAU;0CAAkC;;;;;;;;;;;;kCAEnD,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;0CAAmC,cAAc,OAAO;;;;;;0CACvE,8OAAC;gCAAI,WAAU;0CAAkC;;;;;;;;;;;;;;;;;;0BAKrD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBACC,WAAU;wBACV,OAAO;4BAAE,OAAO,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,cAAc,IAAI,IAAI,KAAK,KAAK,CAAC,CAAC;wBAAC;;;;;;;;;;;;;;;;;;;;;;AAMtF","debugId":null}}]
}